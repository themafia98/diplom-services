{"version":3,"sources":["Components/Helpers/index.jsx","Redux/actions/tabActions/index.js","Redux/actions/tabActions/const.js","Redux/actions/routerActions/index.js","Redux/actions/routerActions/const.js","Components/Loader/index.jsx","Components/Pages/Recovery/index.jsx","Components/ModalWindow/index.jsx","Components/Pages/LoginPage/index.jsx","Components/HeaderView/Tab.jsx","Components/HeaderView/index.jsx","Components/DrawerViewer/index.jsx","Components/Output/index.jsx","Components/TableView/index.jsx","Components/WeatherWidget/index.jsx","Components/StreamBox/index.jsx","Components/TitleModule/index.jsx","Components/Modules/MainModule/index.jsx","Components/UserCard/index.jsx","Components/Modules/CabinetModule/index.jsx","Components/Modules/TaskModule/TaskModuleCalendar/index.jsx","Components/Modules/TaskModule/TaskModuleList/index.jsx","Components/Modules/TaskModule/TaskModuleMyList/index.jsx","Components/Modules/TaskModule/index.jsx","Components/Modules/StatisticsModule/Charts/Bar.jsx","Components/Modules/StatisticsModule/index.jsx","Components/ObserverTime/index.jsx","Components/Modules/SettingsModule/index.jsx","Components/ContentView/index.jsx","Components/MenuView/index.jsx","Components/Pages/UserPanel/index.jsx","App.jsx","Utils/index.js","serviceWorker.js","delayFirebase/firebaseConfig.js","delayFirebase/Firebase.js","delayFirebase/firebaseContext.js","Components/ErrorBoundary/ErrorPage.jsx","Components/ErrorBoundary/index.jsx","Redux/reducers/tabReducer/index.js","Redux/reducers/routerStateReducer/index.js","Redux/reducers/index.js","Redux/store.js","index.js"],"names":["PrivateRoute","Component","component","firebase","routeProps","exact","render","props","getCurrentUser","to","pathname","state","from","location","setChildrenSizeAction","type","payload","updatePathAction","addTabAction","Loader","className","classNameSpiner","src","alt","Recovory","style","textAlign","fontWeight","React","Option","Select","ModalWindow","login","visible","name","password","departament","email","loading","showModal","setState","handleOk","e","surname","registration","then","res","additionalUserInfo","isNewUser","db","collection","add","uuid","rules","position","status","catch","error","console","handleCancel","log","onChangeSelect","event","onChange","target","split","value","mode","this","onClick","onOk","onCancel","title","size","placeholder","optionFilterProp","LoginPage","redirect","enterLoading","router","actionTabs","currentActionTab","addTab","moveTo","Error","_","isEmpty","history","push","refLogin","node","refPassword","isUser","config","ref","connect","dispatch","path","a","tab","Tab","componentDidMount","tabData","onSetChildrenSizeAction","isNull","childrenSize","tabSize","getBoundingClientRect","width","eventHandler","callbackHendlerTab","hendlerTab","itemKey","stopPropagation","eventCloseHandler","tabRef","flag","active","sizeTab","maxWidth","minWidth","join","key","left","tabReducer","Header","Layout","HeaderView","defaultSizeTab","componentDidUpdate","tabArray","onsetParentSizeAction","wrapper","parentSize","newSize","length","refWrapper","renderTabs","items","activeTabEUID","cbMenuTabHandler","map","item","EUID","VALUE","logout","DrawerViewer","onClose","Output","showTooltip","widthChild","widthParent","child","parent","childRef","parentRef","childW","parentW","children","output","placement","TableView","searchText","users","load","isScroll","get","querySnapshot","forEach","doc","data","$","window","on","setSizeWindow","componentWillUnmount","off","innerWidth","getComponentByPath","user","getRowsTable","colSpan","columns","dataIndex","text","row","index","getColumnSearchProps","i","priority","author","editor","date","moment","format","it","filter","Boolean","scroll","x","dataSource","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","searchInput","onPressEnter","handleSearch","marginBottom","display","icon","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","arrayData","WeatherWidjet","list","info","axios","findCountry","city","countryCode","sendRequstWeather","process","test","dt_txt","statusText","getWeatherParseDataComponent","components","temp","main","weather","reverse","toFixed","StreamBox","boxClassName","height","TitleModule","classNameTitle","additional","MainModule","Date","ket","fullscreen","UserCard","cdShowModal","menu","Item","overlay","trigger","Dragger","Upload","CabinetModule","imageUrl","disabled","hideModal","beforeUpload","file","isJpgOrPng","startsWith","message","isLt2M","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","setFile","reset","success","originFileObj","bind","uploadButton","showUploadList","listType","onChangeFile","accept","action","PureComponent","TaskModuleCalendar","getListData","listData","today","content","dateCellRender","outValues","reduce","prev","current","monthCellRender","TaskModuleList","TaskModuleMyList","TaskModule","getTaskByPath","Bar","keys","indexBy","margin","top","right","bottom","colors","scheme","defs","id","background","stagger","rotation","lineWidth","spacing","fill","match","borderColor","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","animate","motionStiffness","motionDamping","StatisticsModule","ObserverTime","Fragment","locale","navigator","language","Panel","Collapse","SettingsModule","haveChanges","emailValue","telValue","mail","phone","hideMail","hidePhone","onChangeInput","dataset","defaultActiveKey","header","data-id","allowClear","defaultChecked","bordered","Content","ContentView","drawerView","disableF5","which","keyCode","preventDefault","document","Sider","SubMenu","Menu","MenuView","collapsed","cbOnCollapse","cbMenuHandler","cbGoMain","collapsible","onCollapse","confing","theme","defaultSelectedKeys","parentItem","PARENT_CODE","childParentItem","ICON","renderMenu","UserPanel","menuItems","onLogoutAction","signOut","getActionTabs","tabs","tabsCopy","tabsArray","tabItem","find","goHome","setCurrentTab","menuHandler","removeTab","actionTabsCopy","isFind","findIndex","tabsLimit","actionTabsData","setLogoutTabs","logoutRouterAction","App","firebaseLoadState","loadAppSession","defaultModule","loadApp","auth","onAuthStateChanged","forceUpdate","returnValue","Recovery","hostname","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInterface","require","initializeApp","firestore","lowConnection","enablePersistence","warn","er","setPersistence","Auth","Persistence","signInWithEmailAndPassword","createUserWithEmailAndPassword","currentUser","saveSession","session","firebaseContext","createContext","ErrorPage","logger","ErrorBoundary","hasError","eventId","Sentry","dsn","errorInfo","scope","setExtras","initialState","combineReducers","filterArray","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","ReactDOM","basename","Provider","Consumer","getElementById","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.0843b89f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({ component: Component, firebase, ...routeProps }) => (\r\n    <Route\r\n        exact\r\n        {...routeProps}\r\n        render={props =>\r\n            firebase.getCurrentUser() ? (\r\n                <Component {...props} firebase={firebase} />\r\n            ) : (\r\n                <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n            )\r\n        }\r\n    />\r\n);\r\n","import { SET_PARENT_SIZE, SET_CHILDREN_SIZE, SET_LOGOUT_TABS } from \"./const\";\r\n\r\nexport const setParentSizeAction = state => {\r\n    return {\r\n        type: SET_PARENT_SIZE,\r\n        payload: state,\r\n    };\r\n};\r\n\r\nexport const setChildrenSizeAction = state => {\r\n    return {\r\n        type: SET_CHILDREN_SIZE,\r\n        payload: state,\r\n    };\r\n};\r\n\r\nexport const setLogoutTabs = state => {\r\n    return {\r\n        type: SET_LOGOUT_TABS,\r\n        payload: state,\r\n    };\r\n};\r\n","export const SET_PARENT_SIZE = \"SET_PARENT_SIZE\";\r\nexport const SET_CHILDREN_SIZE = \"SET_CHILDREN_SIZE\";\r\nexport const SET_LOGOUT_TABS = \"SET_LOGOUT_TABS\";\r\n","import { SET_PATH, ADD_TAB, SET_ACTIVE_TAB, REMOVE_TAB, LOGOUT } from \"./const\";\r\nimport { setLogoutTabs } from \"../tabActions\";\r\n\r\nexport const updatePathAction = state => {\r\n    return {\r\n        type: SET_PATH,\r\n        payload: state,\r\n    };\r\n};\r\n\r\nexport const addTabAction = state => {\r\n    return {\r\n        type: ADD_TAB,\r\n        payload: state,\r\n    };\r\n};\r\n\r\nexport const setActiveTabAction = state => {\r\n    return {\r\n        type: SET_ACTIVE_TAB,\r\n        payload: state,\r\n    };\r\n};\r\n\r\nexport const removeTabAction = state => {\r\n    return {\r\n        type: REMOVE_TAB,\r\n        payload: state,\r\n    };\r\n};\r\n\r\nexport const logoutRouterAction = state => {\r\n    return {\r\n        type: LOGOUT,\r\n        payload: state,\r\n    };\r\n};\r\n\r\nexport const logoutAction = state => {\r\n    return dispatch => {\r\n        dispatch(setLogoutTabs());\r\n        dispatch(logoutRouterAction());\r\n    };\r\n};\r\n","export const SET_PATH = \"SET_PATH\";\r\nexport const ADD_TAB = \"ADD_TAB\";\r\nexport const REMOVE_TAB = \"REMOVE_TAB\";\r\nexport const SET_ACTIVE_TAB = \"SET_ACTIVE_TAB\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n","import React from \"react\";\r\n\r\nconst Loader = ({ className = \"defaultLoader\", classNameSpiner = null }) => (\r\n    <div className={className ? className : null}>\r\n        <img className={classNameSpiner ? classNameSpiner : null} src=\"/img/loader.gif\" alt=\"loader\" />\r\n    </div>\r\n);\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nclass Recovory extends React.Component {\r\n    render() {\r\n        return (\r\n            <div style={{ textAlign: \"center\", fontWeight: \"bold\" }} className=\"recovoryPage\">\r\n                Recovory page coming soon...\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Recovory;\r\n","import React from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport { Button, Input, Select } from \"antd\";\r\nimport uuid from \"uuid/v4\";\r\nconst { Option } = Select;\r\nclass ModalWindow extends React.Component {\r\n    state = {\r\n        login: null,\r\n        visible: false,\r\n        name: null,\r\n        password: null,\r\n        departament: null,\r\n        email: null,\r\n        loading: false,\r\n    };\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = e => {\r\n        const { login, name, password, departament, email, loading, surname } = this.state;\r\n        const { firebase } = this.props;\r\n\r\n        if (login && name && password && departament && email && !loading) {\r\n            firebase\r\n                .registration(email, password)\r\n                .then(res => {\r\n                    if (res.additionalUserInfo.isNewUser)\r\n                        firebase.db.collection(\"users\").add({\r\n                            uuid: uuid(),\r\n                            login: login,\r\n                            name: name,\r\n                            surname: surname,\r\n                            departament: departament,\r\n                            email: email,\r\n                            rules: \"false\",\r\n                            position: \"Не установлено\",\r\n                            status: \"Новый сотрудник\",\r\n                        });\r\n                })\r\n                .then(res => {\r\n                    this.setState({\r\n                        uuid: uuid(),\r\n                        visible: false,\r\n                        loading: false,\r\n                    });\r\n                })\r\n                .catch(error => console.error(error));\r\n        }\r\n    };\r\n\r\n    handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n            loading: false,\r\n        });\r\n    };\r\n\r\n    onChangeSelect = event => {\r\n        this.setState({ departament: event });\r\n    };\r\n\r\n    onChange = event => {\r\n        const { target } = event;\r\n        if (target.className.split(\" \")[1] === \"surname\") {\r\n            this.setState({\r\n                surname: target.value,\r\n            });\r\n        } else if (target.className.split(\" \")[1] === \"name\") {\r\n            this.setState({\r\n                name: target.value,\r\n            });\r\n        } else if (target.className.split(\" \")[1] === \"password\") {\r\n            this.setState({\r\n                password: target.value,\r\n            });\r\n        } else if (target.className.split(\" \")[1] === \"login\") {\r\n            this.setState({\r\n                login: target.value,\r\n            });\r\n        } else if (target.className.split(\" \")[1] === \"email\") {\r\n            this.setState({\r\n                email: target.value,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { mode } = this.props;\r\n        if (mode !== \"reg\") return null;\r\n        else if (mode === \"reg\")\r\n            return (\r\n                <div>\r\n                    <Button type=\"primary\" onClick={this.showModal}>\r\n                        Registration\r\n                    </Button>\r\n                    <Modal\r\n                        className=\"modalWindow\"\r\n                        visible={this.state.visible}\r\n                        onOk={this.handleOk}\r\n                        onCancel={this.handleCancel}\r\n                        title=\"Registration\"\r\n                    >\r\n                        <Input\r\n                            onChange={this.onChange}\r\n                            className=\"email\"\r\n                            type=\"text\"\r\n                            size=\"default\"\r\n                            placeholder=\"email\"\r\n                        />\r\n                        <Input\r\n                            onChange={this.onChange}\r\n                            className=\"password\"\r\n                            type=\"password\"\r\n                            size=\"default\"\r\n                            placeholder=\"password\"\r\n                        />\r\n                        <Input\r\n                            onChange={this.onChange}\r\n                            className=\"login\"\r\n                            type=\"email\"\r\n                            size=\"default\"\r\n                            placeholder=\"login\"\r\n                        />\r\n                        <Input\r\n                            onChange={this.onChange}\r\n                            className=\"name\"\r\n                            type=\"text\"\r\n                            size=\"default\"\r\n                            placeholder=\"name\"\r\n                        />\r\n                        <Input\r\n                            onChange={this.onChange}\r\n                            className=\"surname\"\r\n                            type=\"text\"\r\n                            size=\"default\"\r\n                            placeholder=\"surname\"\r\n                        />\r\n                        <Select\r\n                            onChange={this.onChangeSelect}\r\n                            className=\"selectDepartament\"\r\n                            placeholder=\"Select a departament\"\r\n                            optionFilterProp=\"depart\"\r\n                        >\r\n                            <Option value=\"Admin\">Admin</Option>\r\n                            <Option value=\"Doctor\">Doctor</Option>\r\n                        </Select>\r\n                    </Modal>\r\n                </div>\r\n            );\r\n    }\r\n}\r\nexport default ModalWindow;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Redirect, NavLink } from \"react-router-dom\";\r\nimport { Button, Input } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { updatePathAction, addTabAction } from \"../../../Redux/actions/routerActions\";\r\nimport config from \"../../../config.json\";\r\n\r\nimport ModalWindow from \"../../ModalWindow\";\r\n\r\nclass LoginPage extends React.Component {\r\n    state = {\r\n        loading: false,\r\n        redirect: false,\r\n    };\r\n\r\n    enterLoading = event => {\r\n        const {\r\n            state: { value: login },\r\n        } = this.login;\r\n        const {\r\n            state: { value: password },\r\n        } = this.password;\r\n        const { router: { actionTabs = [], currentActionTab } = {}, addTab, moveTo } = this.props;\r\n\r\n        if (login && password) {\r\n            this.setState({ loading: true });\r\n            this.props.firebase\r\n                .login(login, password)\r\n                .then(res => {\r\n                    if (res) {\r\n                        moveTo(\"/panel\")\r\n                            .then(() => {\r\n                                if (_.isEmpty(actionTabs)) addTab(currentActionTab);\r\n                            })\r\n                            .then(() => this.props.history.push(\"/panel\"));\r\n                    } else throw new Error(\"Error enter\");\r\n                })\r\n                .catch(error => this.setState({ loading: false }));\r\n        }\r\n    };\r\n\r\n    login = null;\r\n    password = null;\r\n\r\n    refLogin = node => (this.login = node);\r\n    refPassword = node => (this.password = node);\r\n\r\n    render() {\r\n        const { refLogin, refPassword, enterLoading } = this;\r\n        const { isUser, firebase } = this.props;\r\n        const { loading } = this.state;\r\n\r\n        if (isUser && firebase.getCurrentUser()) return <Redirect to=\"/panel\" />;\r\n\r\n        return (\r\n            <div className=\"loginPage\">\r\n                <div className=\"loginPage__loginContainer\">\r\n                    <h1 className=\"loginContainer__title\">{config[\"title\"]}</h1>\r\n                    <div className=\"loginContainer__logo\">\r\n                        <img src={config[\"icon\"]} alt=\"icon\" />\r\n                    </div>\r\n                    <form name=\"loginForm\" className=\"loginContainer__loginForm\">\r\n                        <Input size=\"large\" placeholder=\"login\" ref={refLogin} />\r\n                        <Input type=\"password\" size=\"large\" placeholder=\"password\" ref={refPassword} />\r\n                        <Button type=\"primary\" loading={loading} onClick={enterLoading}>\r\n                            Enter\r\n                        </Button>\r\n                        <ModalWindow firebase={firebase} mode=\"reg\" />\r\n                        <NavLink to=\"/recovory\">Recovory password</NavLink>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        router: { ...state.router },\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        moveTo: async path => await dispatch(updatePathAction(path)),\r\n        addTab: tab => dispatch(addTabAction(tab)),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(LoginPage);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport { Icon } from \"antd\";\r\n\r\nimport { setChildrenSizeAction } from \"../../Redux/actions/tabActions\";\r\n\r\nclass Tab extends React.Component {\r\n    componentDidMount = () => {\r\n        const { tabData, onSetChildrenSizeAction } = this.props;\r\n\r\n        if (!_.isNull(this.tab) && !_.isNull(tabData) && _.isNull(tabData.childrenSize)) {\r\n            const tabSize = this.tab.getBoundingClientRect().width;\r\n            if (tabSize !== tabData.childrenSize) onSetChildrenSizeAction(tabSize);\r\n        }\r\n    };\r\n\r\n    eventHandler = event => {\r\n        const { hendlerTab: callbackHendlerTab, itemKey } = this.props;\r\n        event.stopPropagation();\r\n        callbackHendlerTab(event, itemKey, \"open\");\r\n    };\r\n\r\n    eventCloseHandler = event => {\r\n        const { hendlerTab: callbackHendlerTab, itemKey } = this.props;\r\n        event.stopPropagation();\r\n        if (itemKey === \"mainModule\") return;\r\n        // cbCallbackResize(resize);\r\n        callbackHendlerTab(event, itemKey, \"close\");\r\n    };\r\n\r\n    tab = null;\r\n    tabRef = node => (this.tab = node);\r\n\r\n    render() {\r\n        const { flag, value, active, hendlerTab: callbackHendlerTab, itemKey, sizeTab = 10 } = this.props;\r\n        return (\r\n            <li\r\n                style={{ width: `${sizeTab}px`, maxWidth: `${sizeTab}px`, minWidth: flag ? `${sizeTab}px` : null }}\r\n                onClick={callbackHendlerTab ? this.eventHandler : null}\r\n                className={[active ? \"active\" : null].join(\" \")}\r\n                key={itemKey}\r\n                ref={this.tabRef}\r\n            >\r\n                <span className={[active ? \"tabWrapper-content selected\" : \"tabWrapper-content\"].join(\" \")}>\r\n                    <span className=\"tab-content\">{value}</span>\r\n                </span>\r\n                <Icon\r\n                    style={{ left: sizeTab < 60 ? `85%` : sizeTab < 90 ? `90%` : sizeTab < 102 ? `93%` : null }}\r\n                    className={[\"closeTab\"].join(\" \")}\r\n                    onClick={callbackHendlerTab ? this.eventCloseHandler : null}\r\n                    type=\"close\"\r\n                />\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        tabData: state.tabReducer,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSetChildrenSizeAction: size => dispatch(setChildrenSizeAction(size)),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(Tab);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport Tab from \"./Tab\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport { setParentSizeAction, setChildrenSizeAction } from \"../../Redux/actions/tabActions\";\r\nimport uuid from \"uuid/v4\";\r\n\r\nconst { Header } = Layout;\r\n\r\nclass HeaderView extends React.Component {\r\n    state = {\r\n        defaultSizeTab: 160,\r\n    };\r\n\r\n    componentDidUpdate = () => {\r\n        const { tabArray, tabData, onSetChildrenSizeAction, onsetParentSizeAction } = this.props;\r\n        let sizeTab = !tabData.flag ? this.state.defaultSizeTab : tabData.childrenSize;\r\n        if (!_.isNull(this.wrapper) && !_.isNull(tabData) && _.isNull(tabData.parentSize)) {\r\n            const newSize = this.wrapper.getBoundingClientRect().width;\r\n            if (tabData.parentSize !== newSize) onsetParentSizeAction(newSize);\r\n        }\r\n\r\n        if (\r\n            !_.isNull(tabData) &&\r\n            !_.isNull(tabData.childrenSize) &&\r\n            !_.isNull(tabData.parentSize) &&\r\n            tabArray.length > 1\r\n        ) {\r\n            const length = tabData.childrenSize * tabArray.length;\r\n            if (tabData.parentSize < length + sizeTab) {\r\n                const size = tabData.parentSize / tabArray.length;\r\n                if (size !== tabData.childrenSize) onSetChildrenSizeAction(size, true);\r\n            }\r\n        }\r\n    };\r\n\r\n    wrapper = null;\r\n    refWrapper = node => (this.wrapper = node);\r\n\r\n    renderTabs = items => {\r\n        const { activeTabEUID, cbMenuTabHandler, tabArray, tabData } = this.props;\r\n        let sizeTab = !tabData.flag ? this.state.defaultSizeTab : tabData.childrenSize;\r\n        let flag = false;\r\n        const length = sizeTab * tabArray.length;\r\n        if (sizeTab > tabData.childrenSize && tabData.parentSize < length + sizeTab) {\r\n            flag = true;\r\n        }\r\n\r\n        return (\r\n            <ul ref={this.refWrapper} className=\"tabsMenu\">\r\n                {items.map(item => {\r\n                    return (\r\n                        <Tab\r\n                            hendlerTab={cbMenuTabHandler}\r\n                            active={activeTabEUID === item.EUID}\r\n                            key={item.EUID + uuid()}\r\n                            itemKey={item.EUID}\r\n                            value={item.VALUE}\r\n                            sizeTab={sizeTab}\r\n                            flag={flag}\r\n                        />\r\n                    );\r\n                })}\r\n            </ul>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { logout, actionTabs } = this.props;\r\n        return (\r\n            <Header>\r\n                {actionTabs ? this.renderTabs(actionTabs) : null}\r\n                <div onClick={logout} className=\"logout\">\r\n                    Выйти\r\n                </div>\r\n            </Header>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = state => {\r\n    return {\r\n        tabData: state.tabReducer,\r\n        tabArray: state.router.actionTabs,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onsetParentSizeAction: size => dispatch(setParentSizeAction(size)),\r\n        onSetChildrenSizeAction: (size, flag) => dispatch(setChildrenSizeAction(size, flag)),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateTopProps,\r\n    mapDispatchToProps,\r\n)(HeaderView);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nclass DrawerViewer extends React.Component {\r\n    state = {};\r\n    render() {\r\n        const { onClose, visible } = this.props;\r\n        return <Drawer onClose={onClose} title=\"Панель администратора\" width={720} visible={visible}></Drawer>;\r\n    }\r\n}\r\n\r\nexport default DrawerViewer;\r\n","import React from \"react\";\r\nimport { Tooltip } from \"antd\";\r\nimport _ from \"lodash\";\r\n\r\nclass Output extends React.Component {\r\n    state = {\r\n        showTooltip: false,\r\n        widthChild: null,\r\n        widthParent: null,\r\n    };\r\n\r\n    child = null;\r\n    parent = null;\r\n    childRef = node => (this.child = node);\r\n    parentRef = node => (this.parent = node);\r\n\r\n    componentDidMount = () => {\r\n        const { showTooltip, widthChild, widthParent } = this.state;\r\n        if (_.isNull(widthChild) && _.isNull(widthParent) && !showTooltip && this.child && this.parent) {\r\n            const childW = this.child.getBoundingClientRect().width;\r\n            const parentW = this.parent.getBoundingClientRect().width;\r\n            this.setState({\r\n                showTooltip: childW > parentW,\r\n                widthChild: childW,\r\n                widthParent: parentW,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { className, children, type } = this.props;\r\n        const { showTooltip } = this.state;\r\n        if (type === \"table\") {\r\n            const output = (\r\n                <td>\r\n                    <div className=\"output\" ref={this.parentRef}>\r\n                        <span ref={this.childRef} className={className ? className : null}>\r\n                            {children}\r\n                        </span>\r\n                    </div>\r\n                </td>\r\n            );\r\n            if (!showTooltip) return output;\r\n            else\r\n                return (\r\n                    <Tooltip className=\"pointerTooltip\" placement=\"topLeft\" title={children}>\r\n                        {output}\r\n                    </Tooltip>\r\n                );\r\n        } else {\r\n            const output = (\r\n                <div className=\"output\" ref={this.parentRef}>\r\n                    <span ref={this.childRef} className={className ? className : null}>\r\n                        {children}\r\n                    </span>\r\n                </div>\r\n            );\r\n            if (!showTooltip) return output;\r\n            else\r\n                return (\r\n                    <Tooltip placement=\"topLeft\" title={children}>\r\n                        {output}\r\n                    </Tooltip>\r\n                );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Output;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport $ from \"jquery\";\r\nimport { Icon, Empty, Table, Input, Button } from \"antd\";\r\nimport Loader from \"../Loader\";\r\nimport Scrollbars from \"react-custom-scrollbars\";\r\nimport uuid from \"uuid/v4\";\r\nimport moment from \"moment\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport Output from \"../Output\";\r\n\r\n// const { Search } = Input;\r\n\r\nclass TableView extends React.Component {\r\n    state = {\r\n        searchText: null,\r\n        users: [],\r\n        load: false,\r\n        isScroll: null,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const { firebase: { db = null } = {}, path } = this.props;\r\n        if (path === \"mainModule__table\") {\r\n            db.collection(\"users\")\r\n                .get()\r\n                .then(function(querySnapshot) {\r\n                    const users = [];\r\n                    querySnapshot.forEach(function(doc) {\r\n                        users.push(doc.data());\r\n                    });\r\n                    return users;\r\n                })\r\n                .then(users => {\r\n                    this.setState({ users: users, load: true });\r\n                });\r\n        }\r\n\r\n        $(window).on(\"resize\", this.setSizeWindow);\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        $(window).off(\"resize\", this.setSizeWindow);\r\n    };\r\n\r\n    setSizeWindow = event => {\r\n        if (window.innerWidth <= 1200 && _.isNull(this.state.isScroll)) this.setState({ isScroll: true });\r\n        else if (this.state.isScroll && window.innerWidth > 1200) this.setState({ isScroll: null });\r\n    };\r\n\r\n    getComponentByPath = path => {\r\n        const { users, load } = this.state;\r\n        const { user, flag } = this.props;\r\n\r\n        if (path === \"mainModule__table\") {\r\n            return (\r\n                <Scrollbars>\r\n                    <table key={uuid()}>\r\n                        <thead>\r\n                            <tr>\r\n                                <td>Статус</td>\r\n                                <td>Сотрудник</td>\r\n                                <td>Отдел</td>\r\n                                <td>Должность</td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {users.length && load ? (\r\n                                this.getRowsTable(users)\r\n                            ) : load ? (\r\n                                <tr>\r\n                                    <td colSpan=\"5\">\r\n                                        <Empty className=\"emptyTable\" />\r\n                                    </td>\r\n                                </tr>\r\n                            ) : (\r\n                                <tr>\r\n                                    <td colSpan=\"5\">\r\n                                        <Loader classNameSpiner=\"tableLoader\" className=\"wrapperLoaderTable\" />\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                        <tfoot></tfoot>\r\n                    </table>\r\n                </Scrollbars>\r\n            );\r\n        } else if (path === \"searchTable\") {\r\n            const columns = [\r\n                {\r\n                    title: \"Статус\",\r\n                    className: \"status\",\r\n                    dataIndex: \"status\",\r\n                    key: \"status\",\r\n                    render: (text, row, index) => {\r\n                        let className = \"\";\r\n                        if (text === \"В работе\") className = \"active\";\r\n                        else if (text === \"Открыт\") className = \"\";\r\n                        else if (text === \"Закрыт\") className = \"close\";\r\n                        else if (text === \"Выполнен\") className = \"done\";\r\n                        else className = \"\";\r\n\r\n                        return (\r\n                            <Output className={className} key={uuid()}>\r\n                                {text}\r\n                            </Output>\r\n                        );\r\n                    },\r\n                    ...this.getColumnSearchProps(\"status\"),\r\n                },\r\n                {\r\n                    title: \"Наименование\",\r\n                    className: \"name\",\r\n                    dataIndex: \"name\",\r\n                    key: \"name\",\r\n                    render: (text, row, index) => {\r\n                        return <Output key={uuid()}>{text}</Output>;\r\n                    },\r\n                    ...this.getColumnSearchProps(\"name\"),\r\n                },\r\n                {\r\n                    title: \"Приоритет\",\r\n                    className: \"priority\",\r\n                    dataIndex: \"priority\",\r\n                    key: \"priority\",\r\n                    render: (text, row, index) => {\r\n                        return <Output key={uuid()}>{text}</Output>;\r\n                    },\r\n                    ...this.getColumnSearchProps(\"priority\"),\r\n                },\r\n                {\r\n                    title: \"Автор задачи\",\r\n                    className: \"author\",\r\n                    dataIndex: \"author\",\r\n                    key: \"author\",\r\n                    render: (text, row, index) => {\r\n                        return <Output key={uuid()}>{text}</Output>;\r\n                    },\r\n                    ...this.getColumnSearchProps(\"author\"),\r\n                },\r\n                {\r\n                    title: \"Исполнитель\",\r\n                    className: \"editor\",\r\n                    dataIndex: \"editor\",\r\n                    key: \"editor\",\r\n                    render: (text, row, index) => {\r\n                        return <Output key={uuid()}>{text}</Output>;\r\n                    },\r\n                    ...this.getColumnSearchProps(\"editor\"),\r\n                },\r\n                {\r\n                    title: \"Дата создания\",\r\n                    className: \"date\",\r\n                    dataIndex: \"date\",\r\n                    key: \"date\",\r\n                    render: (text, row, index) => {\r\n                        return <Output key={uuid()}> {text}</Output>;\r\n                    },\r\n                    ...this.getColumnSearchProps(\"date\"),\r\n                },\r\n            ];\r\n\r\n            let data = [];\r\n\r\n            for (let i = 1; i <= 30; i++) {\r\n                data.push({\r\n                    key: i,\r\n                    status: i % 3 === 0 ? \"В работе\" : i % 2 === 0 ? \"Закрыт\" : i > 20 ? \"Выполнен\" : \"Открыт\",\r\n                    name: \"Исправление багов \" + i,\r\n                    priority: \"Средний\",\r\n                    author: \"Павел Петрович\",\r\n                    editor: \"Гена Букин\",\r\n                    date: moment().format(\"L\"),\r\n                });\r\n            }\r\n\r\n            data.push({\r\n                key: 32,\r\n                status: \"Закрыт\",\r\n                name: \"Исправление багов \" + 32,\r\n                priority: \"Средний\",\r\n                author: \"Вася Василевский\",\r\n                editor: \"Павел Петрович\",\r\n                date: moment().format(\"L\"),\r\n            });\r\n\r\n            data = flag\r\n                ? data\r\n                      .map(it => {\r\n                          if (it.editor === user) return it;\r\n                          else return null;\r\n                      })\r\n                      .filter(Boolean)\r\n                : data;\r\n            return <Table scroll={{ x: this.state.isScroll }} columns={columns} dataSource={data} />;\r\n        } else return null;\r\n    };\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => {\r\n            return (\r\n                <div style={{ padding: 8 }}>\r\n                    <Input\r\n                        ref={node => {\r\n                            this.searchInput = node;\r\n                        }}\r\n                        placeholder={`Поиск по ${dataIndex}`}\r\n                        value={selectedKeys[0]}\r\n                        onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                        onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n                        style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n                    />\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n                        icon=\"search\"\r\n                        size=\"small\"\r\n                        style={{ width: 90, marginRight: 8 }}\r\n                    >\r\n                        Искать\r\n                    </Button>\r\n                    <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Сброс\r\n                    </Button>\r\n                </div>\r\n            );\r\n        },\r\n        filterIcon: filtered => <Icon type=\"search\" style={{ color: filtered ? \"#1890ff\" : undefined }} />,\r\n        onFilter: (value, record) => {\r\n            const filterText = record[dataIndex]\r\n                .toString()\r\n                .toLowerCase()\r\n                .includes(value.toLowerCase());\r\n            return filterText;\r\n        },\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select());\r\n            }\r\n        },\r\n        render: text => {\r\n            const className =\r\n                text === \"В работе\"\r\n                    ? \"active\"\r\n                    : text === \"Открыт\"\r\n                    ? \"\"\r\n                    : text === \"Закрыт\"\r\n                    ? \"close\"\r\n                    : text === \"Выполнен\"\r\n                    ? \"done\"\r\n                    : null;\r\n\r\n            if (this.state.searchText)\r\n                return (\r\n                    <Output className={className} key={uuid()}>\r\n                        <Highlighter\r\n                            highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n                            searchWords={[this.state.searchText]}\r\n                            autoEscape\r\n                            textToHighlight={text.toString()}\r\n                        />\r\n                    </Output>\r\n                );\r\n            else\r\n                return (\r\n                    <Output className={className} key={uuid()}>\r\n                        {text.toString()}\r\n                    </Output>\r\n                );\r\n        },\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n    };\r\n\r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: \"\" });\r\n    };\r\n\r\n    getRowsTable = arrayData => {\r\n        return arrayData.map(it => {\r\n            return (\r\n                <tr className=\"contentTr\" key={uuid()}>\r\n                    <Output key={uuid()} type=\"table\" className=\"status\">\r\n                        {it.status}\r\n                    </Output>\r\n                    <Output key={uuid()} type=\"table\" className=\"nameSurname\">{`${it.name} ${it.surname}`}</Output>\r\n                    <Output key={uuid()} type=\"table\" className=\"departament\">\r\n                        {it.departament}\r\n                    </Output>\r\n                    <Output key={uuid()} type=\"table\" className=\"departament\">\r\n                        {it.position}\r\n                    </Output>\r\n                    {it.email ? (\r\n                        <td>\r\n                            <Icon type=\"mail\" />\r\n                        </td>\r\n                    ) : null}\r\n                </tr>\r\n            );\r\n        });\r\n    };\r\n    render() {\r\n        const { path } = this.props;\r\n        const component = this.getComponentByPath(path);\r\n        return component;\r\n    }\r\n}\r\nexport default TableView;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\n\r\nimport Loader from \"../Loader\";\r\n\r\nclass WeatherWidjet extends React.Component {\r\n    state = {\r\n        list: null,\r\n        info: null,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        axios\r\n            .get(\"http://ip-api.com/json/\")\r\n            .then(res => {\r\n                let findCountry = \"Minsk,BLR\";\r\n                if (res.status === 200) findCountry = `${res.data.city},${res.data.countryCode}`;\r\n                this.sendRequstWeather(findCountry);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n                this.sendRequstWeather(\"Minsk,BLR\");\r\n            });\r\n    };\r\n\r\n    sendRequstWeather = findCountry => {\r\n        return axios\r\n            .get(\r\n                `http://api.openweathermap.org/data/2.5/forecast?q=${findCountry}&APPID=${process.env.REACT_APP_WEATHER_API_TOKEN}`,\r\n            )\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    const {\r\n                        data: { list, city },\r\n                    } = res;\r\n                    return this.setState({\r\n                        list: list.filter(item => /21:00:00/gi.test(item.dt_txt)),\r\n                        info: { ...city },\r\n                    });\r\n                } else throw Error(res.statusText);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    };\r\n\r\n    getWeatherParseDataComponent = (list, info) => {\r\n        const components = [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            const temp = list[i].main.temp - 273.15;\r\n            const icon = `${list[i].weather[0].icon}.png`;\r\n            const data = list[i].dt_txt\r\n                .split(\" \")[0]\r\n                .split(\"-\")\r\n                .reverse()\r\n                .join(\".\");\r\n            components.push(\r\n                <div key={i + temp} className=\"weather\">\r\n                    <p>{data}</p>\r\n                    <img alt=\"icon_weather\" className=\"weather_icon\" src={`http://openweathermap.org/img/w/${icon}`} />\r\n                    <p className=\"templo\">{temp.toFixed(1)}C&deg;</p>\r\n                </div>,\r\n            );\r\n        }\r\n        return components;\r\n    };\r\n\r\n    render() {\r\n        const { list, info } = this.state;\r\n        if (!_.isNull(list) && !_.isNull(info))\r\n            return <div className=\"weatherWidjet\">{this.getWeatherParseDataComponent(list, info)}</div>;\r\n        else\r\n            return (\r\n                <div className=\"weatherWidjet\">\r\n                    <Loader classNameSpiner=\"weatherLoader\" className=\"wrapperLoader\" />\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default WeatherWidjet;\r\n","import React from \"react\";\r\nimport { Avatar } from \"antd\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nclass StreamBox extends React.Component {\r\n    render() {\r\n        const { mode, boxClassName } = this.props;\r\n        let value = `\r\n        Hello world!!! \r\n        My name Pavel Petrovich and I'm Frontend developer. I looking for job.\r\n        Hello world!!! \r\n        My name Pavel Petrovich and I'm Frontend developer. I looking for job.\r\n        Hello world!!! \r\n        My name Pavel Petrovich and I'm Frontend developer. I looking for job.\r\n        Hello world!!!`;\r\n        return (\r\n            <Scrollbars style={mode ? { height: \"500px\" } : null}>\r\n                <div className={[\"streamBox\", boxClassName ? boxClassName : null].join(\" \")}>\r\n                    <div className={[\"cardStream\", mode ? mode : null].join(\" \")}>\r\n                        <div className=\"about\">\r\n                            <Avatar size=\"64\" icon=\"user\" />\r\n                            <p className=\"name\">Pavel Petrovich</p>\r\n                        </div>\r\n                        <p className=\"card_message\">{value}</p>\r\n                    </div>\r\n                    <div className={[\"cardStream\", mode ? mode : null].join(\" \")}>\r\n                        <div className=\"about\">\r\n                            <Avatar size=\"64\" icon=\"user\" />\r\n                            <p className=\"name\">Pavel Petrovich</p>\r\n                        </div>\r\n                        <p className=\"card_message\">{value}</p>\r\n                    </div>\r\n                    <div className={[\"cardStream\", mode ? mode : null].join(\" \")}>\r\n                        <div className=\"about\">\r\n                            <Avatar size=\"64\" icon=\"user\" />\r\n                            <p className=\"name\">Pavel Petrovich</p>\r\n                        </div>\r\n                        <p className=\"card_message\">{value}</p>\r\n                    </div>\r\n                    <div className={[\"cardStream\", mode ? mode : null].join(\" \")}>\r\n                        <div className=\"about\">\r\n                            <Avatar size=\"64\" icon=\"user\" />\r\n                            <p className=\"name\">Pavel Petrovich</p>\r\n                        </div>\r\n                        <p className=\"card_message\">{value}</p>\r\n                    </div>\r\n                </div>\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StreamBox;\r\n","import React from \"react\";\r\n\r\nconst TitleModule = ({ title, className, classNameTitle, additional }) => {\r\n    return (\r\n        <div className={[\"titleModule\", className ? className : null].join(\" \")}>\r\n            <p className={[\"titleModule_title\", classNameTitle ? classNameTitle : null].join(\" \")}>{title}</p>\r\n            {additional ? <span>{additional}</span> : null}\r\n        </div>\r\n    );\r\n};\r\nexport default TitleModule;\r\n","import React from \"react\";\r\nimport TableView from \"../../TableView\";\r\nimport WeatherWidjet from \"../../WeatherWidget\";\r\nimport StreamBox from \"../../StreamBox\";\r\nimport TitleModule from \"../../TitleModule\";\r\nimport { Calendar } from \"antd\";\r\n\r\nclass MainModule extends React.Component {\r\n    state = {\r\n        date: new Date(),\r\n    };\r\n\r\n    render() {\r\n        const { firebase } = this.props;\r\n        return (\r\n            <div className=\"mainModule\">\r\n                <TitleModule additional=\"Общая информация\" classNameTitle=\"mainModuleTitle\" title=\"Главная страница\" />\r\n                <div className=\"mainModule_main\">\r\n                    <div className=\"col-4 columnModuleLeft\">\r\n                        <StreamBox />\r\n                    </div>\r\n                    <div className=\"col-8 columnModuleRight\">\r\n                        <div className=\"widjects\">\r\n                            <WeatherWidjet ket=\"weatherWidjet\" />\r\n                            <Calendar className=\"mainModule_calendar\" fullscreen={false} />\r\n                        </div>\r\n                        <div className=\"tableViw__wrapper\">\r\n                            <TableView path=\"mainModule__table\" firebase={firebase} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainModule;\r\n","import React from \"react\";\r\nimport { Avatar, Button, Icon, Dropdown, Menu } from \"antd\";\r\n\r\nclass UserCard extends React.Component {\r\n    render() {\r\n        const data = { mail: true, online: true, email: \"admin@admin.com\", phone: \"+37529554433\" };\r\n        const isMine = true;\r\n        const { cdShowModal } = this.props;\r\n        const menu = (\r\n            <Menu>\r\n                <Menu.Item onClick={cdShowModal ? cdShowModal : null} key=\"photoChange\">\r\n                    Сменить аватар\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n        return (\r\n            <div className=\"userCard\">\r\n                <div className=\"wallpaper\"></div>\r\n                <div className=\"mainContentCard\">\r\n                    <div className=\"col-6\">\r\n                        {isMine ? (\r\n                            <Dropdown overlay={menu} trigger={[\"contextMenu\"]}>\r\n                                <Avatar className=\"userLogo\" size={84} icon=\"user\" />\r\n                            </Dropdown>\r\n                        ) : (\r\n                            <Avatar className=\"userLogo\" size={84} icon=\"user\" />\r\n                        )}\r\n                        <div className=\"mainInformUser\">\r\n                            <p className=\"name\">Павел Петрович</p>\r\n                            <p className=\"position\">Разработчик</p>\r\n                            {data.mail ? <Button className=\"controller\" type=\"primary\" icon=\"mail\"></Button> : null}\r\n                            {data.online ? <Button className=\"controller\" type=\"primary\" icon=\"wechat\"></Button> : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <p className=\"summary\">\r\n                            My name Pavel Petrovich and I'm Frontend developer. I looking for job. I looking for job. I\r\n                            looking for job. I looking for job. I looking for job. I looking for job. I looking for job.\r\n                        </p>\r\n                        <div className=\"contact\">\r\n                            {data.mail ? (\r\n                                <div className=\"email\">\r\n                                    <Icon type=\"mail\" /> <span>{data.email}</span>\r\n                                </div>\r\n                            ) : null}\r\n                            {data.phone ? (\r\n                                <div className=\"phone\">\r\n                                    <Icon type=\"phone\" /> <span>{data.phone}</span>\r\n                                </div>\r\n                            ) : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserCard;\r\n","import React from \"react\";\r\nimport { Modal, Upload, message, Icon, Button } from \"antd\";\r\nimport UserCard from \"../../UserCard\";\r\nimport TitleModule from \"../../TitleModule\";\r\nimport StreamBox from \"../../StreamBox\";\r\n\r\nconst { Dragger } = Upload;\r\n\r\nclass CabinetModule extends React.PureComponent {\r\n    state = {\r\n        imageUrl: null,\r\n        loading: false,\r\n        disabled: false,\r\n    };\r\n\r\n    showModal = event => {\r\n        this.setState({ ...this.state, visible: true });\r\n    };\r\n\r\n    hideModal = event => {\r\n        this.setState({ ...this.state, visible: false, imageUrl: null, loading: false, disabled: false });\r\n    };\r\n\r\n    beforeUpload = file => {\r\n        const isJpgOrPng = file.type.startsWith(\"image/\");\r\n        if (!isJpgOrPng) {\r\n            this.setState(state => ({ ...state, loading: !state.loading, disabled: false, error: true }));\r\n            message.error(\"Вы можете загрузить только изображение.\");\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 5;\r\n        if (!isLt2M) {\r\n            this.setState(state => ({ ...state, loading: !state.loading, disabled: false, error: true }));\r\n            message.error(\"Изображение должно быть меньше 5 мб.\");\r\n        }\r\n        return isJpgOrPng && isLt2M;\r\n    };\r\n\r\n    getBase64 = (img, callback) => {\r\n        const reader = new FileReader();\r\n        reader.addEventListener(\"load\", () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    };\r\n\r\n    setFile = imageUrl => {\r\n        this.setState({\r\n            imageUrl,\r\n            loading: false,\r\n        });\r\n    };\r\n\r\n    reset = event => {\r\n        this.setState({ ...this.state, imageUrl: null, loading: false, disabled: false });\r\n    };\r\n\r\n    onChangeFile(info) {\r\n        const { status } = info.file;\r\n        if (status !== \"uploading\") {\r\n            this.setState({ disabled: false });\r\n        }\r\n        if (status === \"done\") {\r\n            message.success(`${info.file.name} file uploaded successfully.`);\r\n            this.getBase64(info.file.originFileObj, this.setFile.bind(this));\r\n            this.setState({ disabled: true });\r\n        } else if (status === \"error\") {\r\n            this.setState({ disabled: false });\r\n            message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { visible, imageUrl } = this.state;\r\n\r\n        const props = {\r\n            action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n        };\r\n\r\n        const uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" />\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"cabinetModule\">\r\n                <TitleModule additional=\"Профиль\" classNameTitle=\"cabinetModuleTitle\" title=\"Личный кабинет\" />\r\n                <div className=\"cabinetModule_main\">\r\n                    <div className=\"col-6\">\r\n                        <UserCard cdShowModal={this.showModal} />\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <p className=\"lastActivity\">Последняя активность</p>\r\n                        <StreamBox boxClassName=\"streamActivityCabinet\" mode=\"activity\" />\r\n                    </div>\r\n                </div>\r\n                <Modal title=\"Сменить фото\" visible={visible} onCancel={this.hideModal}>\r\n                    <Dragger\r\n                        beforeUpload={this.beforeUpload}\r\n                        showUploadList={false}\r\n                        listType=\"picture-card\"\r\n                        disabled={this.state.disabled}\r\n                        onChange={this.onChangeFile.bind(this)}\r\n                        accept=\"image/*\"\r\n                        {...props}\r\n                    >\r\n                        {imageUrl && !this.state.loading ? (\r\n                            <img src={imageUrl} alt=\"avatar\" style={{ width: \"50%\" }} />\r\n                        ) : (\r\n                            uploadButton\r\n                        )}\r\n                        {imageUrl ? (\r\n                            <Button className=\"deleteButton\" onClick={this.reset} type=\"primary\">\r\n                                Удалить загруженное изображение\r\n                            </Button>\r\n                        ) : null}\r\n                    </Dragger>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CabinetModule;\r\n","import React from \"react\";\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport moment from \"moment\";\r\nimport TitleModule from \"../../../TitleModule\";\r\nimport { Calendar, Popover, Button } from \"antd\";\r\n\r\nclass TaskModuleCalendar extends React.PureComponent {\r\n    getListData = value => {\r\n        let listData = [];\r\n        let today = moment().date();\r\n        let valueDate = value.date();\r\n\r\n        switch (valueDate) {\r\n            case today: {\r\n                listData = [{ type: \"error\", content: \"Исправить баги. \" }];\r\n                break;\r\n            }\r\n            case today - 7: {\r\n                listData = [\r\n                    {\r\n                        type: \"success\",\r\n                        content: \"Исправить баг. Исправить баги.Исправить баги. Исправить баги. Исправить баги.\",\r\n                    },\r\n                ];\r\n                break;\r\n            }\r\n            default:\r\n        }\r\n        return listData || [];\r\n    };\r\n\r\n    dateCellRender = value => {\r\n        const listData = this.getListData(value);\r\n        const content = listData.map(item => {\r\n            return (\r\n                <li onClick={this.test} key={item.content}>\r\n                    {item.content}\r\n                </li>\r\n            );\r\n        });\r\n\r\n        const list = (\r\n            <ul key=\"list\" className=\"listTasks\">\r\n                {content}\r\n            </ul>\r\n        );\r\n        let outValues = listData.length ? [...listData] : null;\r\n        if (listData.length) {\r\n            outValues = outValues.reduce((prev, current) => prev.content + current.content);\r\n        }\r\n\r\n        if (content.length)\r\n            return (\r\n                <Popover content={list}>\r\n                    <Button>\r\n                        <span className=\"calendarDate-content\">{outValues.content}</span>\r\n                    </Button>\r\n                </Popover>\r\n            );\r\n    };\r\n\r\n    test = event => { };\r\n\r\n    render() {\r\n        return (\r\n            <Scrollbars>\r\n                <div className=\"taskModuleCalendar\">\r\n                    <TitleModule classNameTitle=\"taskModuleTittle\" title=\"Календарь задач\" />\r\n                    <div className=\"taskModuleCalendar__main\">\r\n                        <Calendar dateCellRender={this.dateCellRender} monthCellRender={this.monthCellRender} />\r\n                    </div>\r\n                </div>\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskModuleCalendar;\r\n","import React from \"react\";\r\nimport Scrollbars from \"react-custom-scrollbars\";\r\nimport TableView from \"../../../TableView\";\r\nimport TitleModule from \"../../../TitleModule\";\r\n\r\nclass TaskModuleList extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <Scrollbars>\r\n                <div className=\"taskModule_all\">\r\n                    <TitleModule additional=\"Все задачи\" classNameTitle=\"taskModuleTittle\" title=\"Список всех задач\" />\r\n                    <div className=\"taskModuleAll_main\">\r\n                        <TableView path=\"searchTable\" />\r\n                    </div>\r\n                </div>\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\nexport default TaskModuleList;\r\n","import React from \"react\";\r\n\r\nimport TableView from \"../../../TableView\";\r\nimport TitleModule from \"../../../TitleModule\";\r\n\r\nclass TaskModuleMyList extends React.PureComponent {\r\n    render() {\r\n        const { user } = this.props;\r\n        return (\r\n            <div className=\"taskModule_all\">\r\n                <TitleModule additional=\"Мои задачи\" classNameTitle=\"taskModuleTittle\" title=\"Список моих задач\" />\r\n                <div className=\"taskModuleAll_main\">\r\n                    <TableView flag={true} user={user} path=\"searchTable\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default TaskModuleMyList;\r\n","import React from \"react\";\r\n\r\nimport TaskModuleCalendar from \"./TaskModuleCalendar\";\r\nimport TaskModuleList from \"./TaskModuleList\";\r\nimport TaskModuleMyList from \"./TaskModuleMyList\";\r\n\r\nclass TaskModule extends React.PureComponent {\r\n    getTaskByPath = path => {\r\n        if (path) {\r\n            if (path === \"taskModule_all\") return <TaskModuleList />;\r\n            if (path === \"taskModule_myTasks\") return <TaskModuleMyList user=\"Павел Петрович\" />;\r\n            if (path === \"taskModule_сalendar\") return <TaskModuleCalendar />;\r\n            else return <div>Not found taskModule</div>;\r\n        }\r\n    };\r\n    render() {\r\n        const { path } = this.props;\r\n        const component = this.getTaskByPath(path);\r\n        return <div className=\"taskModule\">{component ? component : null}</div>;\r\n    }\r\n}\r\n\r\nexport default TaskModule;\r\n","import React from \"react\";\r\nimport { ResponsiveBar } from \"@nivo/bar\";\r\nconst Bar = ({ data }) => (\r\n    <div style={{ height: \"80vh\" }}>\r\n        <ResponsiveBar\r\n            data={data}\r\n            keys={[\"Выполнено\", \"Не выполнено\"]}\r\n            indexBy=\"counter\"\r\n            margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n            padding={0.3}\r\n            colors={{ scheme: \"nivo\" }}\r\n            defs={[\r\n                {\r\n                    id: \"dots\",\r\n                    type: \"patternDots\",\r\n                    background: \"inherit\",\r\n                    color: \"#38bcb2\",\r\n                    size: 4,\r\n                    padding: 1,\r\n                    stagger: true,\r\n                },\r\n                {\r\n                    id: \"lines\",\r\n                    type: \"patternLines\",\r\n                    background: \"inherit\",\r\n                    color: \"#eed312\",\r\n                    rotation: -45,\r\n                    lineWidth: 6,\r\n                    spacing: 10,\r\n                },\r\n            ]}\r\n            fill={[\r\n                {\r\n                    match: {\r\n                        id: \"fries\",\r\n                    },\r\n                    id: \"dots\",\r\n                },\r\n                {\r\n                    match: {\r\n                        id: \"sandwich\",\r\n                    },\r\n                    id: \"lines\",\r\n                },\r\n            ]}\r\n            borderColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: \"Статистика количества выполненных задач\",\r\n                legendPosition: \"middle\",\r\n                legendOffset: 32,\r\n            }}\r\n            axisLeft={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legendPosition: \"middle\",\r\n                legendOffset: -40,\r\n            }}\r\n            labelSkipWidth={12}\r\n            labelSkipHeight={12}\r\n            labelTextColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\r\n            legends={[\r\n                {\r\n                    dataFrom: \"keys\",\r\n                    anchor: \"bottom-right\",\r\n                    direction: \"column\",\r\n                    justify: false,\r\n                    translateX: 120,\r\n                    translateY: 0,\r\n                    itemsSpacing: 2,\r\n                    itemWidth: 100,\r\n                    itemHeight: 20,\r\n                    itemDirection: \"left-to-right\",\r\n                    itemOpacity: 0.85,\r\n                    symbolSize: 20,\r\n                    effects: [\r\n                        {\r\n                            on: \"hover\",\r\n                            style: {\r\n                                itemOpacity: 1,\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n            ]}\r\n            animate={false}\r\n            motionStiffness={90}\r\n            motionDamping={15}\r\n        />\r\n    </div>\r\n);\r\nexport default Bar;\r\n","import React from \"react\";\r\nimport data from \"./data.json\";\r\n\r\nimport Bar from \"./Charts/Bar\";\r\nimport TitleModule from \"../../TitleModule\";\r\nclass StatisticsModule extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <div className=\"statisticsModule\">\r\n                <TitleModule classNameTitle=\"statisticsModuleTitle\" title=\"Статистика\" />\r\n                <div className=\"statisticsModule__main\">\r\n                    <div className=\"col-6\">\r\n                        <Bar data={data.data} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatisticsModule;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport TitleModule from \"../TitleModule\";\r\nimport { Timeline } from \"antd\";\r\nimport \"moment/locale/ru\";\r\nimport \"moment/locale/eu\";\r\nimport \"moment/locale/de\";\r\nclass ObserverTime extends React.Component {\r\n    render() {\r\n        const { title } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <TitleModule classNameTitle=\"observerTitle\" title={title ? title : \"История изменений\"} />\r\n                <div className=\"observerWrapper\">\r\n                    <Timeline>\r\n                        <Timeline.Item>\r\n                            Смена почты{\" \"}\r\n                            {moment()\r\n                                .locale(navigator.language)\r\n                                .format(\"LL\")}\r\n                        </Timeline.Item>\r\n                        <Timeline.Item>\r\n                            Смена пароля{\" \"}\r\n                            {moment()\r\n                                .locale(navigator.language)\r\n                                .format(\"LL\")}\r\n                        </Timeline.Item>\r\n                    </Timeline>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default ObserverTime;\r\n","import React from \"react\";\r\nimport { Collapse, Switch, Input, Button } from \"antd\";\r\nimport ObserverTime from \"../../ObserverTime\";\r\nimport TitleModule from \"../../TitleModule\";\r\nconst { Panel } = Collapse;\r\nclass SettingsModule extends React.PureComponent {\r\n    state = {\r\n        haveChanges: false,\r\n        emailValue: \"\",\r\n        telValue: \"\",\r\n        mail: false,\r\n        phone: false,\r\n    };\r\n\r\n    hideMail = event => {\r\n        if (event !== this.state.mail) {\r\n            this.setState({\r\n                ...this.state,\r\n                haveChanges: true,\r\n                mail: event,\r\n            });\r\n        }\r\n    };\r\n\r\n    hidePhone = event => {\r\n        if (event !== this.state.phone) {\r\n            this.setState({\r\n                ...this.state,\r\n                haveChanges: true,\r\n                phone: event,\r\n            });\r\n        }\r\n    };\r\n\r\n    onChangeInput = event => {\r\n        const { target } = event;\r\n\r\n        if (target.dataset.id === \"email\") {\r\n            this.setState({\r\n                ...this.state,\r\n                haveChanges: true,\r\n                emailValue: target.value,\r\n            });\r\n        } else if (target.dataset.id === \"tel\") {\r\n            this.setState({\r\n                ...this.state,\r\n                haveChanges: true,\r\n                telValue: target.value,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { emailValue, telValue, haveChanges } = this.state;\r\n        const text = ` A dog is a type of domesticated animal.`;\r\n        return (\r\n            <div className=\"settingsModule\">\r\n                <TitleModule classNameTitle=\"settingsModuleTitle\" title=\"Настройки\" />\r\n                <div className=\"settingsModule__main\">\r\n                    <div className=\"col-6\">\r\n                        <Collapse defaultActiveKey={[\"common\"]}>\r\n                            <Panel header=\"Общие настройки\" key=\"common\">\r\n                                <div className=\"settingsPanel--center-flex\">\r\n                                    <div className=\"configWrapper flexWrapper\">\r\n                                        <span>Сменить почту:</span>\r\n                                        <Input\r\n                                            data-id=\"email\"\r\n                                            allowClear\r\n                                            value={emailValue}\r\n                                            onChange={this.onChangeInput}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"configWrapper flexWrapper\">\r\n                                        <span>Сменить телефон:</span>\r\n                                        <Input\r\n                                            data-id=\"tel\"\r\n                                            type=\"tel\"\r\n                                            allowClear\r\n                                            value={telValue}\r\n                                            onChange={this.onChangeInput}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </Panel>\r\n                            <Panel header=\"Настройки профиля\" key=\"profile\">\r\n                                <div className=\"configWrapper\">\r\n                                    <Switch defaultChecked={false} onChange={this.hideMail} />\r\n                                    <span className=\"configTitle\">Скрывать почту</span>\r\n                                </div>\r\n                                <div className=\"configWrapper\">\r\n                                    <Switch defaultChecked={false} onChange={this.hidePhone} />\r\n                                    <span className=\"configTitle\">Скрывать телефон</span>\r\n                                </div>\r\n                            </Panel>\r\n                            <Panel header=\"Настройки уровней доступа\" key=\"access\">\r\n                                <Collapse bordered={false}>\r\n                                    <Panel header=\"Администратор\" key=\"admin\">\r\n                                        {text}\r\n                                    </Panel>\r\n                                    <Panel header=\"Начальник отдела\" key=\"headDepartament\">\r\n                                        {text}\r\n                                    </Panel>\r\n                                    <Panel header=\"Сотрудник\" key=\"solider\">\r\n                                        {text}\r\n                                    </Panel>\r\n                                </Collapse>\r\n                            </Panel>\r\n                        </Collapse>\r\n                        <Button className=\"submit\" type=\"primary\" disabled={!haveChanges}>\r\n                            Принять изменения\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <ObserverTime />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SettingsModule;\r\n","import React from \"react\";\r\nimport $ from \"jquery\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport DrawerViewer from \"../DrawerViewer\";\r\n\r\nimport MainModule from \"../Modules/MainModule\";\r\nimport CabinetModule from \"../Modules/CabinetModule\";\r\nimport TaskModule from \"../Modules/TaskModule\";\r\nimport StatisticsModule from \"../Modules/StatisticsModule\";\r\nimport SettingsModule from \"../Modules/SettingsModule\";\r\n\r\nimport uuid from \"uuid/v4\";\r\n\r\nconst { Content } = Layout;\r\n\r\nclass ContentView extends React.PureComponent {\r\n    state = {\r\n        drawerView: false,\r\n        key: uuid(),\r\n    };\r\n\r\n    getComponentByPath = path => {\r\n        if (!path) return null;\r\n\r\n        const { firebase } = this.props;\r\n\r\n        if (path === \"mainModule\") return <MainModule firebase={firebase} />;\r\n        if (path === \"cabinetModule\") return <CabinetModule firebase={firebase} />;\r\n        if (path.startsWith(\"taskModule\")) return <TaskModule path={path} firebase={firebase} />;\r\n        if (path === \"settingsModule\") return <SettingsModule firebase={firebase} />;\r\n        if (path === \"statisticModule\") return <StatisticsModule firebase={firebase} />;\r\n        else return <div>Not found module: ${path}</div>;\r\n    };\r\n\r\n    disableF5 = event => {\r\n        if ((event.which || event.keyCode) === 113) {\r\n            return this.setState({ ...this.state, drawerView: !this.state.drawerView });\r\n        }\r\n        if ((event.which || event.keyCode) === 116) {\r\n            event.preventDefault();\r\n            return this.setState({ ...this.state, key: uuid() });\r\n        }\r\n    };\r\n\r\n    onClose = event => {\r\n        return this.setState({ ...this.state, drawerView: false });\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        $(document).on(\"keydown\", this.disableF5);\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        $(document).off(\"keydown\");\r\n    };\r\n\r\n    render() {\r\n        const { path } = this.props;\r\n        const { key, drawerView } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <Content key={key}>{this.getComponentByPath(path)}</Content>\r\n                <DrawerViewer onClose={this.onClose} visible={drawerView} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContentView;\r\n","import React from \"react\";\r\nimport confing from \"../../config.json\";\r\nimport _ from \"lodash\";\r\nimport { Menu, Layout, Icon } from \"antd\";\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst MenuView = ({ collapsed, cbOnCollapse, items, cbMenuHandler, activeTabEUID, cbGoMain }) => {\r\n    const renderMenu = items => {\r\n        const parent = items.filter(parentItem => {\r\n            return _.isNull(parentItem.PARENT_CODE);\r\n        });\r\n\r\n        return parent.map(item => {\r\n            const children = items.filter(childParentItem => {\r\n                return item.EUID === childParentItem.PARENT_CODE;\r\n            });\r\n            if (children.length > 0) {\r\n                return (\r\n                    <SubMenu\r\n                        key={item.EUID}\r\n                        title={\r\n                            <span>\r\n                                {item.ICON ? <Icon type={item.ICON} /> : null}\r\n                                <span>{item.VALUE}</span>\r\n                            </span>\r\n                        }\r\n                    >\r\n                        {children.map(child => (\r\n                            <Menu.Item onClick={cbMenuHandler} key={child.EUID}>\r\n                                {child.VALUE}\r\n                            </Menu.Item>\r\n                        ))}\r\n                    </SubMenu>\r\n                );\r\n            } else\r\n                return (\r\n                    <Menu.Item onClick={cbMenuHandler} key={item.EUID}>\r\n                        {item.ICON ? <Icon type={item.ICON} /> : null}\r\n                        <span>{item.VALUE}</span>\r\n                    </Menu.Item>\r\n                );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Sider collapsible collapsed={collapsed} onCollapse={cbOnCollapse}>\r\n            <div className=\"logo\" onClick={cbGoMain}>\r\n                {/*<span>{confing.title}</span>*/}\r\n                <img src={confing.icon} alt=\"logo\" />\r\n            </div>\r\n            {items ? (\r\n                <Menu selectedKeys={[activeTabEUID]} theme=\"dark\" defaultSelectedKeys={[items[0].VALUE]} mode=\"inline\">\r\n                    {renderMenu(items)}\r\n                </Menu>\r\n            ) : null}\r\n        </Sider>\r\n    );\r\n};\r\n\r\nexport default MenuView;\r\n","import React from \"react\";\r\nimport config from \"../../../config.json\";\r\nimport { Layout, message } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    updatePathAction,\r\n    addTabAction,\r\n    setActiveTabAction,\r\n    removeTabAction,\r\n    logoutAction,\r\n} from \"../../../Redux/actions/routerActions\";\r\n\r\nimport { setChildrenSizeAction } from \"../../../Redux/actions/tabActions\";\r\n\r\nimport HeaderView from \"../../HeaderView\";\r\nimport ContentView from \"../../ContentView\";\r\nimport MenuView from \"../../MenuView\";\r\n\r\nclass UserPanel extends React.Component {\r\n    state = {\r\n        collapsed: false,\r\n        menuItems: config.menu,\r\n    };\r\n\r\n    onCollapse = collapsed => {\r\n        this.setState({ collapsed });\r\n    };\r\n\r\n    logout = event => {\r\n        const { firebase, onLogoutAction } = this.props;\r\n        if (firebase) firebase.signOut().then(() => onLogoutAction().then(() => this.props.history.push(\"/\")));\r\n    };\r\n\r\n    getActionTabs = (tabs = [], menu) => {\r\n        const tabsCopy = [...tabs];\r\n        const tabsArray = [];\r\n\r\n        for (let i = 0; i < tabsCopy.length; i++) {\r\n            const tabItem = menu.find(tab => tab.EUID === tabsCopy[i]);\r\n            if (tabItem) tabsArray.push({ ...tabItem });\r\n        }\r\n        return tabsArray;\r\n    };\r\n\r\n    goHome = event => {\r\n        const { setCurrentTab } = this.props;\r\n        setCurrentTab(\"mainModule\");\r\n    };\r\n\r\n    menuHandler = (event, key, mode = \"open\") => {\r\n        const path = event[\"key\"] ? event[\"key\"] : key;\r\n        const {\r\n            router: { currentActionTab, actionTabs = [] } = {},\r\n            addTab,\r\n            setCurrentTab,\r\n            removeTab,\r\n            tabData,\r\n            onSetChildrenSizeAction,\r\n        } = this.props;\r\n        const actionTabsCopy = [...actionTabs];\r\n        const isFind = actionTabsCopy.findIndex(tab => tab === path) !== -1;\r\n        if (mode === \"open\") {\r\n            if (!isFind && config.tabsLimit <= actionTabsCopy.length)\r\n                return message.error(`Максимальное количество вкладок: ${config.tabsLimit}`);\r\n            if (!isFind) addTab(path);\r\n            else if (currentActionTab !== path) {\r\n                setCurrentTab(path);\r\n            }\r\n        } else if (mode === \"close\") {\r\n            let size = tabData.parentSize / actionTabsCopy.length;\r\n            if (size > 160) size = 160;\r\n            if (isFind) removeTab(path);\r\n            if (size !== tabData.childrenSize) onSetChildrenSizeAction(size, true);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { menuItems = null } = this.state;\r\n        const { router: { actionTabs = [], currentActionTab } = {}, firebase } = this.props;\r\n\r\n        const actionTabsData = this.getActionTabs(actionTabs, menuItems);\r\n\r\n        return (\r\n            <Layout className=\"layout_menu\">\r\n                <MenuView\r\n                    items={menuItems}\r\n                    activeTabEUID={currentActionTab}\r\n                    cbMenuHandler={this.menuHandler}\r\n                    collapsed={this.state.collapsed}\r\n                    cbOnCollapse={this.onCollapse}\r\n                    cbGoMain={this.goHome}\r\n                />\r\n                <Layout>\r\n                    <HeaderView\r\n                        cbMenuTabHandler={this.menuHandler}\r\n                        activeTabEUID={currentActionTab}\r\n                        actionTabs={actionTabsData}\r\n                        logout={this.logout}\r\n                    />\r\n                    <ContentView firebase={firebase} key={currentActionTab} path={currentActionTab} />\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        router: { ...state.router },\r\n        tabData: state.tabReducer,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        moveTo: async path => await dispatch(updatePathAction(path)),\r\n        addTab: tab => dispatch(addTabAction(tab)),\r\n        removeTab: tab => dispatch(removeTabAction(tab)),\r\n        setCurrentTab: tab => dispatch(setActiveTabAction(tab)),\r\n        onSetChildrenSizeAction: (size, flag) => dispatch(setChildrenSizeAction(size, flag)),\r\n        onLogoutAction: async () => await dispatch(logoutAction()),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(UserPanel);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { PrivateRoute } from \"./Components/Helpers\";\r\nimport config from \"./config.json\";\r\nimport { forceUpdateDetectedInit } from \"./Utils\";\r\nimport { updatePathAction, addTabAction } from \"./Redux/actions/routerActions\";\r\n\r\nimport Loader from \"./Components/Loader\";\r\nimport Recovery from \"./Components/Pages/Recovery\";\r\nimport LoginPage from \"./Components/Pages/LoginPage\";\r\nimport UserPanel from \"./Components/Pages/UserPanel\";\r\n\r\n// import { isMobile } from \"react-device-detect\";\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        firebaseLoadState: false,\r\n        isUser: false,\r\n    };\r\n\r\n    loadAppSession = () => {\r\n        const { moveTo, addTab } = this.props;\r\n        return this.setState({ isUser: true, firebaseLoadState: true }, () => {\r\n            let path = \"mainModule\";\r\n            const defaultModule = config.menu.find(item => item[\"SIGN\"] === \"default\");\r\n            if (defaultModule) path = defaultModule.EUID;\r\n            moveTo(\"/panel\").then(() => addTab(path));\r\n        });\r\n    };\r\n\r\n    loadApp = () => {\r\n        return this.setState({ firebaseLoadState: true });\r\n    };\r\n\r\n    componentDidMount() {\r\n        /** load app */\r\n        this.props.firebase.auth.onAuthStateChanged(user => {\r\n            if (!this.state.firebaseLoadState) {\r\n                setTimeout(user ? this.loadAppSession.bind(this) : this.loadApp.bind(this), 0);\r\n            }\r\n        });\r\n\r\n        if (config.forceUpdate === true) forceUpdateDetectedInit();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            firebase,\r\n            router: { position },\r\n        } = this.props;\r\n        const { firebaseLoadState, isUser } = this.state;\r\n        if (firebaseLoadState) {\r\n            return (\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/\"\r\n                        render={props => <LoginPage {...props} isUser={isUser} firebase={firebase} />}\r\n                    />\r\n                    <Route exact path=\"/recovory\" render={props => <Recovery {...props} firebase={firebase} />} />\r\n                    <PrivateRoute exact path={position} component={UserPanel} firebase={firebase} />\r\n                </Switch>\r\n            );\r\n        } else return <Loader />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        router: { ...state.router },\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        moveTo: async path => await dispatch(updatePathAction(path)),\r\n        addTab: async tab => await dispatch(addTabAction(tab)),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(App);\r\n","export const forceUpdateDetectedInit = () => {\r\n    window.addEventListener(\"beforeunload\", event => {\r\n        event.returnValue = `Are you sure you want to leave?`;\r\n    });\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === \"[::1]\" ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served cache-first by a service \" +\r\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\");\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error during service worker registration:\", error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get(\"content-type\");\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\"No internet connection found. App is running in offline mode.\");\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","// setings in root folder .env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\nexport default firebaseConfig;\r\n","import firebase from \"firebase/app\";\r\nimport firebaseConfig from \"./firebaseConfig\";\r\nimport config from \"../config.json\";\r\nconst auth = require(\"firebase/auth\");\r\nconst firestore = require(\"firebase/firestore\");\r\nclass Firebase {\r\n    constructor(firebaseConfig) {\r\n        /** @Init firebase */\r\n\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore();\r\n\r\n        if (config.firebase.lowConnection === \"true\" && process.env.NODE_ENV !== \"test\")\r\n            this.db\r\n                .enablePersistence()\r\n                .then(res => console.warn(res))\r\n                .catch(er => console.error(er)); /** if user use low internet @connection */\r\n    }\r\n\r\n    saveSession(rules) {\r\n        /** @Set firebase type session */\r\n        return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n    }\r\n\r\n    login(email, password) {\r\n        /** @login firebase */\r\n        try {\r\n            return this.auth.signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registration(email, password) {\r\n        /** @create new user */\r\n        return this.auth.createUserWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    signOut() {\r\n        /** @destroy session */\r\n        return this.auth.signOut();\r\n    }\r\n\r\n    getCurrentUser() {\r\n        /** @get current user */\r\n        return this.auth.currentUser;\r\n    }\r\n}\r\n\r\nlet firebaseInterface = new Firebase(firebaseConfig);\r\n\r\nif (process.env.NODE_ENV !== \"test\") firebaseInterface.saveSession(config.firebase.session);\r\n\r\nexport default firebaseInterface;\r\nexport { auth, firestore };\r\n","import React from \"react\";\r\nimport firebase from \"./Firebase\";\r\n/** @ContextAPI for firebase */\r\nconst firebaseContext = React.createContext(firebase);\r\nexport default firebaseContext;\r\n","import React from \"react\";\r\n\r\nconst ErrorPage = ({ error, logger }) => {\r\n    return (\r\n        <div className=\"errorPage\">\r\n            <p className=\"errorStatus\">App crash</p>\r\n            <p className=\"messageError\">{error.message}</p>\r\n            <button onClick={logger}>Report feedback</button>\r\n        </div>\r\n    );\r\n};\r\nexport default ErrorPage;\r\n","import React from \"react\";\r\nimport * as Sentry from \"@sentry/browser\";\r\n\r\nimport ErrorPage from \"./ErrorPage\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    state = {\r\n        hasError: false,\r\n        eventId: null,\r\n        error: null,\r\n    };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return { hasError: true, error: error };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        Sentry.withScope(scope => {\r\n            scope.setExtras(errorInfo);\r\n            const eventId = Sentry.captureException(error);\r\n            this.setState({ eventId });\r\n        });\r\n    }\r\n\r\n    logger = event => {\r\n        Sentry.init({ dsn: process.env.REACT_APP_LOGGER_DSN });\r\n        Sentry.showReportDialog({ eventId: this.state.eventId });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            //render fallback UI\r\n            return <ErrorPage logger={this.logger} error={this.state.error} />;\r\n        }\r\n        //when there's not an error, render children untouched\r\n        return this.props.children;\r\n    }\r\n}\r\nexport default ErrorBoundary;\r\n","/** Here action constants import */\r\nimport { SET_PARENT_SIZE, SET_CHILDREN_SIZE, SET_LOGOUT_TABS } from \"../../actions/tabActions/const\";\r\n\r\nconst initialState = {\r\n    parentSize: null,\r\n    childrenSize: null,\r\n    flag: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PARENT_SIZE: {\r\n            return {\r\n                ...state,\r\n                parentSize: action.payload,\r\n            };\r\n        }\r\n        case SET_CHILDREN_SIZE: {\r\n            return {\r\n                ...state,\r\n                childrenSize: action.payload,\r\n                flag: action.payload,\r\n            };\r\n        }\r\n        case SET_LOGOUT_TABS: {\r\n            return {\r\n                ...state,\r\n                parentSize: null,\r\n                childrenSize: null,\r\n                flag: false,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { SET_PATH, ADD_TAB, SET_ACTIVE_TAB, REMOVE_TAB, LOGOUT } from \"../../actions/routerActions/const\";\r\n\r\nconst initialState = {\r\n    position: \"/\",\r\n    currentActionTab: \"mainModule\",\r\n    actionTabs: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PATH:\r\n            return {\r\n                ...state,\r\n                position: action.payload,\r\n            };\r\n        case ADD_TAB:\r\n            return {\r\n                ...state,\r\n                actionTabs: [...state.actionTabs, action.payload],\r\n                currentActionTab: action.payload,\r\n            };\r\n        case SET_ACTIVE_TAB:\r\n            return {\r\n                ...state,\r\n                currentActionTab: action.payload,\r\n            };\r\n        case REMOVE_TAB: {\r\n            let index = 0;\r\n            const filterArray = state.actionTabs.filter((tab, i) => {\r\n                if (tab !== action.payload) index = i;\r\n                return tab !== action.payload;\r\n            });\r\n            return {\r\n                ...state,\r\n                currentActionTab:\r\n                    state.currentActionTab === action.payload\r\n                        ? filterArray[index !== 0 ? index - 1 : 0]\r\n                        : state.currentActionTab,\r\n                actionTabs: filterArray,\r\n            };\r\n        }\r\n        case LOGOUT: {\r\n            return {\r\n                ...state,\r\n                position: \"/\",\r\n                currentActionTab: \"mainModule\",\r\n                actionTabs: [],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport tabReducer from \"./tabReducer\";\r\nimport routerStateReducer from \"./routerStateReducer\";\r\n\r\nexport default combineReducers({\r\n    tabReducer: tabReducer,\r\n    router: routerStateReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport combineReducers from \"./reducers\";\r\n\r\n/** For devtools */\r\nconst composeEnhancers =\r\n    typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n        : compose;\r\n\r\nconst middleware = composeEnhancers(\r\n    /** @Include moddleware */\r\n    applyMiddleware(thunk),\r\n);\r\n\r\nconst store = createStore(combineReducers, middleware);\r\nexport default store;\r\n","import React from \"react\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"normalize.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport * as Sentry from \"@sentry/browser\";\r\n\r\nimport firebase from \"./delayFirebase/Firebase\";\r\nimport firebaseContext from \"./delayFirebase/firebaseContext\";\r\nimport ErrorBoundary from \"./Components/ErrorBoundary\";\r\n\r\nimport store from \"./Redux/store\";\r\nSentry.init({ dsn: process.env.REACT_APP_LOGGER_DSN });\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={\"/\"}>\r\n        <ErrorBoundary>\r\n            <firebaseContext.Provider value={firebase}>\r\n                <Provider store={store}>\r\n                    <firebaseContext.Consumer>\r\n                        {firebase => (\r\n                            <IntlProvider locale={navigator.language}>\r\n                                <App firebase={firebase} />\r\n                            </IntlProvider>\r\n                        )}\r\n                    </firebaseContext.Consumer>\r\n                </Provider>\r\n            </firebaseContext.Provider>\r\n        </ErrorBoundary>\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\"),\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}