// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CreateTask /> template Should be render 1`] = `
<Scrollbars
  autoHeight={false}
  autoHeightMax={200}
  autoHeightMin={0}
  autoHide={false}
  autoHideDuration={200}
  autoHideTimeout={1000}
  hideTracksWhenNotNeeded={true}
  renderThumbHorizontal={[Function]}
  renderThumbVertical={[Function]}
  renderTrackHorizontal={[Function]}
  renderTrackVertical={[Function]}
  renderView={[Function]}
  tagName="div"
  thumbMinSize={30}
  universal={false}
>
  <div
    className="createTask"
  >
    <TitleModule
      additional="Форма создания задачи"
      className=""
      classNameTitle="createTaskTitle"
      title="Новая задача"
    />
    <div
      className="createTask__main"
    >
      <div
        className="col-6 col-task"
      >
        <Scrollbars
          autoHeight={false}
          autoHeightMax={200}
          autoHeightMin={0}
          autoHide={true}
          autoHideDuration={200}
          autoHideTimeout={1000}
          hideTracksWhenNotNeeded={true}
          renderThumbHorizontal={[Function]}
          renderThumbVertical={[Function]}
          renderTrackHorizontal={[Function]}
          renderTrackVertical={[Function]}
          renderView={[Function]}
          tagName="div"
          thumbMinSize={30}
          universal={false}
        >
          <form
            className="taskForm"
            name="taskForm"
          >
            <label>
              Название: 
            </label>
            <Input
              className=""
              name="name"
              onChange={[Function]}
              type="text"
            />
            <label>
               Статус: 
            </label>
            <Select
              choiceTransitionName="zoom"
              className=""
              name="state"
              onChange={[Function]}
              showSearch={false}
              transitionName="slide-up"
              type="text"
            />
            <label>
              Приоритет: 
            </label>
            <Select
              choiceTransitionName="zoom"
              className=""
              defaultValue="Средний"
              name="priority"
              onChange={[Function]}
              showSearch={false}
              transitionName="slide-up"
              type="text"
            >
              <Option
                value="Низкий"
              >
                Низкий
              </Option>
              <Option
                value="Средний"
              >
                Средний
              </Option>
              <Option
                value="Высокий"
              >
                Высокий
              </Option>
              <Option
                value="Критический"
              >
                Критический
              </Option>
            </Select>
            <label>
              Назначить исполнителя/исполнителей:
            </label>
            <Select
              choiceTransitionName="zoom"
              className=""
              mode="multiple"
              name="editor"
              onChange={[Function]}
              optionLabelProp="label"
              placeholder="выберете исполнителя"
              showSearch={false}
              transitionName="slide-up"
            />
            <label>
              Описание задачи: 
            </label>
            <Textarea
              className=""
              defaultValue=""
              editor={false}
              key="createTextare"
              name="description"
              onChange={[Function]}
              onClick={null}
              onKeyDown={null}
              row={5}
              rows={8}
              value={null}
            />
            <label>
              Прикрепить файлы: 
            </label>
            <File
              isLocal={true}
              module="tasks"
              moduleData={
                Object {
                  "id": "00fdee7d-e507-4427-9a64-c9f0c965660d_virtual",
                  "name": " taskModule",
                }
              }
            />
            <label>
              Срок сдачи: 
            </label>
            <PickerWrapper
              className=""
              defaultValue={
                Array [
                  "2020-05-09T21:00:00.000Z",
                  "2020-05-09T21:00:00.000Z",
                ]
              }
              format="DD.MM.YYYY"
              locale={Object {}}
              name="date"
              onChange={[Function]}
              onOk={[Function]}
              onOpenChange={[Function]}
              popupStyle={Object {}}
              transitionName="slide-up"
              type="date"
            />
            <Button
              block={false}
              className="submitNewTask"
              disabled={false}
              ghost={false}
              htmlType="button"
              loading={false}
              onClick={[Function]}
              type="primary"
            >
              Создать задачу
            </Button>
          </form>
        </Scrollbars>
      </div>
      <div
        className="col-6 error-logger"
      >
        <ul
          className="errors-list"
        />
      </div>
    </div>
  </div>
</Scrollbars>
`;

exports[`<CreateTask /> template Should be render 2`] = `
<Scrollbars
  autoHeight={false}
  autoHeightMax={200}
  autoHeightMin={0}
  autoHide={false}
  autoHideDuration={200}
  autoHideTimeout={1000}
  hideTracksWhenNotNeeded={true}
  renderThumbHorizontal={[Function]}
  renderThumbVertical={[Function]}
  renderTrackHorizontal={[Function]}
  renderTrackVertical={[Function]}
  renderView={[Function]}
  tagName="div"
  thumbMinSize={30}
  universal={false}
>
  <div
    className="createTask"
  >
    <TitleModule
      additional="Форма создания задачи"
      className=""
      classNameTitle="createTaskTitle"
      title="Новая задача"
    />
    <div
      className="createTask__main"
    >
      <div
        className="col-6 col-task"
      >
        <Scrollbars
          autoHeight={false}
          autoHeightMax={200}
          autoHeightMin={0}
          autoHide={true}
          autoHideDuration={200}
          autoHideTimeout={1000}
          hideTracksWhenNotNeeded={true}
          renderThumbHorizontal={[Function]}
          renderThumbVertical={[Function]}
          renderTrackHorizontal={[Function]}
          renderTrackVertical={[Function]}
          renderView={[Function]}
          tagName="div"
          thumbMinSize={30}
          universal={false}
        >
          <form
            className="taskForm"
            name="taskForm"
          >
            <label>
              Название: 
            </label>
            <Input
              className=""
              name="name"
              onChange={[Function]}
              type="text"
            />
            <label>
               Статус: 
            </label>
            <Select
              choiceTransitionName="zoom"
              className=""
              name="state"
              onChange={[Function]}
              showSearch={false}
              transitionName="slide-up"
              type="text"
            />
            <label>
              Приоритет: 
            </label>
            <Select
              choiceTransitionName="zoom"
              className=""
              defaultValue="Средний"
              name="priority"
              onChange={[Function]}
              showSearch={false}
              transitionName="slide-up"
              type="text"
            >
              <Option
                value="Низкий"
              >
                Низкий
              </Option>
              <Option
                value="Средний"
              >
                Средний
              </Option>
              <Option
                value="Высокий"
              >
                Высокий
              </Option>
              <Option
                value="Критический"
              >
                Критический
              </Option>
            </Select>
            <label>
              Назначить исполнителя/исполнителей:
            </label>
            <Select
              choiceTransitionName="zoom"
              className=""
              mode="multiple"
              name="editor"
              onChange={[Function]}
              optionLabelProp="label"
              placeholder="выберете исполнителя"
              showSearch={false}
              transitionName="slide-up"
            />
            <label>
              Описание задачи: 
            </label>
            <Textarea
              className=""
              defaultValue=""
              editor={false}
              key="createTextare"
              name="description"
              onChange={[Function]}
              onClick={null}
              onKeyDown={null}
              row={5}
              rows={8}
              value={null}
            />
            <label>
              Прикрепить файлы: 
            </label>
            <File
              isLocal={true}
              module="tasks"
              moduleData={
                Object {
                  "id": "00fdee7d-e507-4427-9a64-c9f0c965660d_virtual",
                  "name": " taskModule",
                }
              }
            />
            <label>
              Срок сдачи: 
            </label>
            <PickerWrapper
              className=""
              defaultValue={
                Array [
                  "2020-05-09T21:00:00.000Z",
                  "2020-05-09T21:00:00.000Z",
                ]
              }
              format="DD.MM.YYYY"
              locale={Object {}}
              name="date"
              onChange={[Function]}
              onOk={[Function]}
              onOpenChange={[Function]}
              popupStyle={Object {}}
              transitionName="slide-up"
              type="date"
            />
            <Button
              block={false}
              className="submitNewTask"
              disabled={true}
              ghost={false}
              htmlType="button"
              loading={true}
              onClick={[Function]}
              type="primary"
            >
              Создать задачу
            </Button>
          </form>
        </Scrollbars>
      </div>
      <div
        className="col-6 error-logger"
      >
        <ul
          className="errors-list"
        />
      </div>
    </div>
  </div>
</Scrollbars>
`;
