// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TaskModule /> template Should be render 1`] = `
<div
  className="taskModule"
  key="taskModule"
>
  <Scrollbars
    autoHeight={false}
    autoHeightMax={200}
    autoHeightMin={0}
    autoHide={false}
    autoHideDuration={200}
    autoHideTimeout={1000}
    hideTracksWhenNotNeeded={false}
    renderThumbHorizontal={[Function]}
    renderThumbVertical={[Function]}
    renderTrackHorizontal={[Function]}
    renderTrackVertical={[Function]}
    renderView={[Function]}
    tagName="div"
    thumbMinSize={30}
    universal={false}
  >
    <div
      className="controllersWrapper"
      key="controllers"
    >
      <Button
        block={false}
        className="newTaskButton"
        ghost={false}
        htmlType="button"
        loading={false}
        onClick={[Function]}
        type="primary"
      >
        Создать новую задачу
      </Button>
    </div>
    <TabContainer
      className="tabList"
      isBackground={false}
      visible={true}
    >
      <TaskModuleList
        height={null}
        isBackground={false}
        key="taskList"
        loaderMethods={Object {}}
        router={
          Object {
            "actionTabs": Array [
              "MainModule",
            ],
            "currentActionTab": "mainModule",
            "routeData": Object {
              "taskModule__all": Object {},
            },
            "routeDataActive": Object {},
          }
        }
        setCurrentTab={[Function]}
        visible={true}
      />
    </TabContainer>
    <TabContainer
      className="tabList"
      isBackground={false}
      visible={false}
    >
      <TaskModuleMyList
        height={null}
        isBackground={false}
        key="myListTask"
        loaderMethods={Object {}}
        router={
          Object {
            "actionTabs": Array [
              "MainModule",
            ],
            "currentActionTab": "mainModule",
            "routeData": Object {
              "taskModule__all": Object {},
            },
            "routeDataActive": Object {},
          }
        }
        setCurrentTab={[Function]}
        udata={Object {}}
        visible={false}
      />
    </TabContainer>
    <TabContainer
      className="validateStyleWrapper"
      isBackground={false}
      visible={false}
    >
      <TaskModuleCalendar
        height={null}
        isBackground={false}
        key="calendarTaskModule"
        onOpenPageWithData={[Function]}
        router={
          Object {
            "actionTabs": Array [
              "MainModule",
            ],
            "currentActionTab": "mainModule",
            "routeData": Object {
              "taskModule__all": Object {},
            },
            "routeDataActive": Object {},
          }
        }
        setCurrentTab={[Function]}
        visible={false}
      />
    </TabContainer>
    <TabContainer
      className="validateStyleWrapper"
      isBackground={false}
      visible={false}
    >
      <CreateTask
        height={null}
        isBackground={false}
        key="createTask_module"
        onLoadCurrentData={[Function]}
        onOpenPageWithData={[Function]}
        router={
          Object {
            "actionTabs": Array [
              "MainModule",
            ],
            "currentActionTab": "mainModule",
            "routeData": Object {
              "taskModule__all": Object {},
            },
            "routeDataActive": Object {},
          }
        }
        statusApp="online"
        udata={Object {}}
        visible={false}
      />
    </TabContainer>
    <TabContainer
      className="validateStyleWrapper"
      isBackground={false}
      visible={false}
    >
      <Connect(TaskView)
        height={null}
        isBackground={false}
        onLoadCurrentData={[Function]}
        visible={false}
      />
    </TabContainer>
  </Scrollbars>
</div>
`;

exports[`<TaskModule /> template Should be render 2`] = `
<div
  className="taskModule"
  key="taskModule"
>
  <div>
    Not found path module
  </div>
</div>
`;
