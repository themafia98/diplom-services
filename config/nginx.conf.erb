daemon off;
#Heroku dynos have at least 8 cores.
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
	use epoll;
	accept_mutex on;
	worker_connections 1024;
}

http {
    gzip on;
    gzip_comp_level 5;
	gzip_min_length 512;

	gzip_static  on;
	gzip_proxied expired no-cache no-store private auth;
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

	server_tokens off;

	log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
	access_log logs/nginx/access.log l2met;
	error_log logs/nginx/error.log;

	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	#Must read the body in 5 seconds.
	client_body_timeout 5;

	# handle SNI
    proxy_ssl_server_name on;
    proxy_ssl_name localhost;
    # resolver needs to be set because we're using dynamic proxy_pass
    resolver 8.8.8.8;

    upstream app_server {
		server localhost:<%= ENV["APP_PORT"] %> fail_timeout=0;
    }


     server {
		listen <%= ENV["PORT"] %>;
		server_name nginx_diplom;
		keepalive_timeout 5;
		
        index index.html;

		location /rest/ {
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_http_version 1.1;
            proxy_pass http://app_server;
		}

		# Requests for socket.io
		location ~* \.io {
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_set_header X-NginX-Proxy false;

			proxy_pass http://app_server;
			proxy_redirect off;
			
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
		  }

		  location ~* \.(?:manifest|appcache|html?|xml|json)$ {
			root /app/client/build;
			expires -1;
		  }


		  # Media: images, icons, video, audio, HTC
		  location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
			root /app/client/build;
			expires 1y;
			access_log off;
			add_header Cache-Control "public, must-revalidate";
		  }

		  location ~*\serviceWorker.js {
			  root /app/client/build;
			  add_header 'Service-Worker-Allowed' '/';
			  expires off;
			  add_header Cache-Control no-cache;
			  access_log off;
		  }

		  # CSS and Javascript
		  location ~* \.(?:css|js)$ {
			root /app/client/build;
			expires 1y;
			access_log off;
			add_header Cache-Control "public, must-revalidate";
		  }

        location / {
			add_header Cache-Control "no-store, no-cache, must-revalidate";
            root /app/client/build;
            index index.html;
            rewrite ^.*$ /index.html;
            try_files $uri $uri/ index.html =404;
        }
	 }
}
